name: Oryx-SDK-Runtime-Automation-Template

on:
  workflow_call:
    inputs:
      releaseDate:
        required: false
        type: string
      platformName:
        required: true
        type: string

  workflow_dispatch:
    inputs:
      releaseDate:
        description: 'The date to check for new releases. Format: yyyy-mm-dd'
        required: false
        type: string
      platformName:
        required: true
        type: string
        default: 'dotnet'
        description: 'The platform name should be all lowercase'

env:
  MAX_RETRIES: 10
  TIMEOUT_SECONDS: 900

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Set Required Environment Variables
        run: |
          set -x
          releaseDate=${{ inputs.releaseDate }}
          if ! [[ "${releaseDate}" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]
          then
            echo "release date is empty or invalid $releaseDate."
            echo "Expecting date format yyyy-mm-dd"
            releaseDate=`date +%F`
            echo "Defaulting to todays date ${releaseDate}"
          fi
          echo "RELEASE_DATE=${releaseDate}" >> $GITHUB_ENV

          declare -A platformNamesAsInBasePipeline
          platformNamesAsInBasePipeline=( ["dotnet"]="DotNetCore" )
          echo "PLATFORM_NAME_CAMEL_CASE=${platformNamesAsInBasePipeline[${{ inputs.platformName }}]}" >> $GITHUB_ENV

      - name: Run SDK Automation
        run: dotnet run --project build/tools/Automation/Automation.csproj ${RELEASE_DATE} ${{ github.workspace }}

      - name: Commit new ${{ env.PLATFORM_NAME_CAMEL_CASE }} SDK versions
        run: |
          set -x
          git config user.name 'Oryx Team'
          git config user.email 'oryx@microsoft.com'
          
          git add -A
          git commit -m "Add new SDK versions" | true
          gitCommitExitCode=${PIPESTATUS[0]}
          if [[ $gitCommitExitCode = 0 ]]; then
            cancelWorkflow=false
          else
            cancelWorkflow=true
          fi


          echo "CANCEL_WORKFLOW=${cancelWorkflow}" >> $GITHUB_ENV

      # TODO: remove peter-evans/create-pull-request and use github.rest
      # Example: https://stackoverflow.com/questions/68057744/create-pull-request-with-github-action/71224444#71224444
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@171dd555b9ab6b18fa02519fdfacbb8bf671e1b4  # locking to a commit version for now
        with:
          branch: automation/add-new-${{ inputs.platformName }}-versions-${{ env.RELEASE_DATE }}
          title: New ${{ env.PLATFORM_NAME_CAMEL_CASE }} Sdks ${{ env.RELEASE_DATE }}
      
      - name: Install jq
        run: |
          if [ ${{ env.CANCEL_WORKFLOW }} = true ]; then
            echo "No new ${{ inputs.platformName }} SDK versions detected. Canceling workflow..."
            exit 0
          fi

          sudo apt-get update
          sudo apt-get install jq -y
          jq --version

      - name: Trigger Dev SDK Pipeline 
        run: |
          if [ ${{ env.CANCEL_WORKFLOW }} = true ]; then
            echo "Canceling workflow..."
            exit 0
          fi

          echo  "${{ secrets.AZURE_DEVOPS_TOKEN }}" | az devops login --organization https://devdiv.visualstudio.com/
          az pipelines run --organization https://devdiv.visualstudio.com/ --project DevDiv --name Oryx-PlatformBinary-${{ env.PLATFORM_NAME_CAMEL_CASE }} --branch automation/add-new-${{ inputs.platformName }}-versions-${{ env.RELEASE_DATE }} > /tmp/sdkPipelineTriggerResponse.json

      - name: Check Dev SDK Pipeline Ran Successfully
        run: |
          if [ ${{ env.CANCEL_WORKFLOW }} = true ]; then
            echo "Canceling workflow..."
            exit 0
          fi

          pipelineInvocationId=$( cat /tmp/sdkPipelineTriggerResponse.json | jq ".id" )
          ${{ github.workspace }}/build/tools/Automation/checkPipelineStatus.sh $pipelineInvocationId

      - name: Trigger Runtime Pipeline 
        run: |
          if [ ${{ env.CANCEL_WORKFLOW }} = true ]; then
            echo "Canceling workflow..."
            exit 0
          fi

          echo  "${{ secrets.AZURE_DEVOPS_TOKEN }}" | az devops login --organization https://devdiv.visualstudio.com/
          az pipelines run --organization https://devdiv.visualstudio.com/ --project DevDiv --name Oryx-BaseImages-${{ env.PLATFORM_NAME_CAMEL_CASE }} --branch automation/add-new-${{ inputs.platformName }}-release-${{ env.RELEASE_DATE }} > /tmp/runtimePipelineTriggerResponse.json

      - name: Check Runtime Pipeline Ran Successfully
        run: |
          if [ ${{ env.CANCEL_WORKFLOW }} = true ]; then
            echo "Canceling workflow..."
            exit 0
          fi

          pipelineInvocationId=$( cat /tmp/runtimePipelineTriggerResponse.json | jq ".id" )
          ${{ github.workspace }}/build/tools/Automation/checkPipelineStatus.sh $pipelineInvocationId

      - name: Install yq
        run: |
          if [ ${{ env.CANCEL_WORKFLOW }} = true ]; then
            echo "Canceling workflow..."
            exit 0
          fi
          
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

      - name: Update Runtime Build Number
        run: |
          set -x
          if [ ${{ env.CANCEL_WORKFLOW }} = true ]; then
            echo "Canceling workflow..."
            exit 0
          fi

          buildNumber=$(cat /tmp/status.json | jq ".buildNumber" | tr -d '"')
          platform=${{ inputs.platformName }}
          [[ "$platform" == "dotnet" ]] && platform="dot-net-core" || platform=$platform
          yq -i "(.[] | select(.name==\"$platform-run-time-versions\") | .constants.$platform-runtime-base-tag) = $buildNumber" build/constants.yaml
          ./build/generateConstants.sh

      - name: Commit and Push
        run: |
          if [ ${{ env.CANCEL_WORKFLOW }} = true ]; then
            echo "Canceling workflow..."
            exit 0
          fi

          git status
          git config user.name 'William Hernandez'
          git config user.email 'williamhe@microsoft.com'
          git add -A
          git commit -m "Add runtime build number"
          git push origin automation/add-new-${{ inputs.platformName }}-versions-${{ env.RELEASE_DATE }}

      - name: Trigger Validation Pipeline 
        run: |
          if [ ${{ env.CANCEL_WORKFLOW }} = true ]; then
            echo "Canceling workflow..."
            exit 0
          fi

          echo  "${{ secrets.AZURE_DEVOPS_TOKEN }}" | az devops login --organization https://devdiv.visualstudio.com/
          az pipelines run --organization https://devdiv.visualstudio.com/ --project DevDiv --name Oryx-Validation --branch automation/add-new-${{ inputs.platformName }}-versions-${{ env.RELEASE_DATE }}

      - if: ${{ env.CANCEL_WORKFLOW != true }}
        name: Trigger Nightly Pipeline 
        run: |
          if [ ${{ env.CANCEL_WORKFLOW }} = true ]; then
            echo "Canceling workflow..."
            exit 0
          fi

          echo  "${{ secrets.AZURE_DEVOPS_TOKEN }}" | az devops login --organization https://devdiv.visualstudio.com/
          az pipelines run --organization https://devdiv.visualstudio.com/ --project DevDiv --name Oryx-Nightly --branch automation/add-new-${{ inputs.platformName }}-versions-${{ env.RELEASE_DATE }}