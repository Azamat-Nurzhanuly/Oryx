parameters:
  - name: storageAccountUrl
    displayName: SDK storage account URL for production images and testing
    type: string
    default: https://oryx-cdn.microsoft.io
    values:
    - https://oryx-cdn.microsoft.io
  - name: buildImages
    type: object
    default:
      -
        key: Latest
        value: latest
      -
        key: LtsVersions
        value: ltsversions
      -
        key: Jamstack
        value: jamstack
      -
        key: GithubActions
        value: githubactions
      -
        key: VsoFocal
        value: vso-focal
      -
        key: VsoBullseye
        value: vso-bullseye
      -
        key: Full
        value: full
      -
        key: Cli
        value: cli-stretch
      -
        key: CliBuster
        value: cli-buster
      -
        key: CliBullseye
        value: cli-bullseye
      -
        key: CliBuilderBullseye
        value: cli-builder-bullseye
      -
        key: Buildpack
        value: buildpack

resources:
- repo: self

variables:
  group: Oryx
  Packaging.EnableSBOMSigning: true

stages:
  - stage: CreateReleaseTag
    jobs:
    - job: CreateReleaseTag
      pool:
        name: AzurePipelines-EO
        demands:
          - ImageOverride -equals AzurePipelinesUbuntu20.04compliant
      variables:
        skipComponentGovernanceDetection: true
      steps:
      - checkout: self
        clean: true

      - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
        displayName: 'Component Detection - OSS Compliance'
        inputs:
          ignoreDirectories: '$(Build.SourcesDirectory)/tests'

      - task: ShellScript@2
        inputs:
          scriptPath: ./vsts/scripts/createReleaseTag.sh
        displayName: 'Create release tag'
      - script: |
          set -ex
          sourcesArtifactsDir="$(Build.SourcesDirectory)/artifacts"
          mkdir -p "$sourcesArtifactsDir"
          echo "$(RELEASE_TAG_NAME)" > "$sourcesArtifactsDir/releaseTag.txt"
        displayName: 'Write release tag name to an artifact file'
      - task: PublishPipelineArtifact@1
        displayName: 'Publish artifact file having the release tag name'
        inputs:
          targetPath: $(Build.SourcesDirectory)/artifacts/releaseTag.txt
          artifactName: releaseTag

  - stage: Release
    displayName: Release Stage

    jobs:
    - template: templates/_releaseJobTemplate.yml

trigger: none